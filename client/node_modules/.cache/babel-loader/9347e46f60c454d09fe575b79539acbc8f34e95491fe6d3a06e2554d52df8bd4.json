{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas\\\\OneDrive\\\\Escritorio\\\\Mern-Context\\\\client\\\\src\\\\context\\\\postContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useContext, createContext, useEffect } from \"react\";\nimport { getPostRequest, createPostRequest, deletePostRequest, getPosttRequest, updatePostRequest } from \"../api/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const postContext = /*#__PURE__*/createContext();\nexport const usePost = () => {\n  _s();\n  const context = useContext(postContext);\n  return context;\n};\n_s(usePost, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const PostProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [post, setPost] = useState([]);\n  const getPosts = async () => {\n    const res = await getPostRequest();\n    setPost(res.data);\n  };\n  const createPost = async posta => {\n    const res = await createPostRequest(posta);\n    setPost([...post, res.data]);\n  };\n  const deletePost = async id => {\n    await deletePostRequest(id);\n    setPost(post.filter(post => post._id !== id));\n  };\n  const getPost = async id => {\n    const res = await getPosttRequest(id);\n    return res;\n  };\n  const updatePost = async (id, posta) => {\n    const res = await updatePostRequest(id, posta);\n    setPost(post.map(post => post._id === id ? res.data : post));\n  };\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(postContext.Provider, {\n    value: {\n      post,\n      getPosts,\n      createPost,\n      deletePost,\n      getPost,\n      updatePost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s2(PostProvider, \"OTqVfaccSrZ2o8u1iZie8TEDImg=\");\n_c = PostProvider;\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["useState","useContext","createContext","useEffect","getPostRequest","createPostRequest","deletePostRequest","getPosttRequest","updatePostRequest","postContext","usePost","context","PostProvider","children","post","setPost","getPosts","res","data","createPost","posta","deletePost","id","filter","_id","getPost","updatePost","map"],"sources":["C:/Users/Nicolas/OneDrive/Escritorio/Mern-Context/client/src/context/postContext.jsx"],"sourcesContent":["import { useState, useContext, createContext, useEffect } from \"react\"\r\nimport { getPostRequest, createPostRequest, deletePostRequest, getPosttRequest, updatePostRequest } from \"../api/posts\"\r\n\r\n\r\nexport const postContext = createContext()\r\n\r\nexport const usePost = () =>{\r\n   const context =  useContext(postContext)\r\n    return context\r\n}\r\n\r\n\r\n\r\nexport const PostProvider = ({children}) =>{\r\n\r\n    const[post, setPost] = useState([])\r\n\r\n    \r\n    \r\n    const getPosts = async () =>{\r\n       const res = await getPostRequest()\r\n       setPost(res.data);\r\n    }\r\n\r\n\r\n    const createPost = async (posta) =>{\r\n        const res = await createPostRequest(posta)\r\n        setPost([...post, res.data])\r\n    }\r\n\r\n     const deletePost = async (id) => {\r\n         await deletePostRequest(id);\r\n        setPost(post.filter(post => post._id !== id ))\r\n    }\r\n\r\n    const getPost = async(id) =>{\r\n        const res = await getPosttRequest(id)\r\n        return res\r\n\r\n    }\r\n\r\n    const updatePost= async(id, posta) => {\r\n        const res = await updatePostRequest(id, posta)\r\n        setPost(post.map((post) => post._id === id ? res.data : post))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPosts()\r\n      }, [])\r\n\r\n\r\n\r\n    return <postContext.Provider value={{\r\n        post,\r\n        getPosts,\r\n        createPost,\r\n        deletePost,\r\n        getPost,\r\n        updatePost\r\n    }}>\r\n        {children}\r\n    </postContext.Provider>\r\n} "],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,cAAc,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,cAAc;AAAA;AAGvH,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAE;AAE1C,OAAO,MAAMQ,OAAO,GAAG,MAAK;EAAA;EACzB,MAAMC,OAAO,GAAIV,UAAU,CAACQ,WAAW,CAAC;EACvC,OAAOE,OAAO;AAClB,CAAC;AAAA,GAHYD,OAAO;AAOpB,OAAO,MAAME,YAAY,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAQ,CAAC;EAEnC,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAInC,MAAMgB,QAAQ,GAAG,YAAW;IACzB,MAAMC,GAAG,GAAG,MAAMb,cAAc,EAAE;IAClCW,OAAO,CAACE,GAAG,CAACC,IAAI,CAAC;EACpB,CAAC;EAGD,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAI;IAC/B,MAAMH,GAAG,GAAG,MAAMZ,iBAAiB,CAACe,KAAK,CAAC;IAC1CL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEG,GAAG,CAACC,IAAI,CAAC,CAAC;EAChC,CAAC;EAEA,MAAMG,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,MAAMhB,iBAAiB,CAACgB,EAAE,CAAC;IAC5BP,OAAO,CAACD,IAAI,CAACS,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACU,GAAG,KAAKF,EAAE,CAAE,CAAC;EAClD,CAAC;EAED,MAAMG,OAAO,GAAG,MAAMH,EAAE,IAAI;IACxB,MAAML,GAAG,GAAG,MAAMV,eAAe,CAACe,EAAE,CAAC;IACrC,OAAOL,GAAG;EAEd,CAAC;EAED,MAAMS,UAAU,GAAE,OAAMJ,EAAE,EAAEF,KAAK,KAAK;IAClC,MAAMH,GAAG,GAAG,MAAMT,iBAAiB,CAACc,EAAE,EAAEF,KAAK,CAAC;IAC9CL,OAAO,CAACD,IAAI,CAACa,GAAG,CAAEb,IAAI,IAAKA,IAAI,CAACU,GAAG,KAAKF,EAAE,GAAGL,GAAG,CAACC,IAAI,GAAGJ,IAAI,CAAC,CAAC;EAClE,CAAC;EAGDX,SAAS,CAAC,MAAM;IACZa,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAIR,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAChCF,IAAI;MACJE,QAAQ;MACRG,UAAU;MACVE,UAAU;MACVI,OAAO;MACPC;IACJ,CAAE;IAAA,UACGb;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAC3B,CAAC;AAAA,IAlDYD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}